version: '3'
services:

  # SERVER
  node-server:
    build:
      context: ./server # Path to server code
      dockerfile: Dockerfile
    volumes:
      - ./server:/server
    command: nodemon app.js localhost ${SERVER_PORT}
    ports:
      - ${SERVER_PORT}:${SERVER_PORT} # Server Port
    env_file:
      - ./.env # Load environment variables from root .env file

  # CLIENT
  react-client:
    build:
      context: ./client # Path to client code
      dockerfile: Dockerfile
    volumes:
      - ./client:/client:delegated
    command: npm start
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT} # Client Port
    environment:
      - PORT=${CLIENT_PORT}
    env_file:
      - ./.env # Load environment variables from root .env file

  # GRAPH DATABASE
  neo4j-db:
    image: neo4j # Use the official Neo4j Docker image
    hostname: cartographer-neo4j-db-1
    volumes:
      - neo4j-data:/data  # Persist Neo4j data
    ports:
      - ${NEO4J_HTTP_PORT}:${NEO4J_HTTP_PORT} # Map container port for HTTP
      - ${NEO4J_BOLT_PORT}:${NEO4J_BOLT_PORT} # Map container port for Bolt
    environment:
      # - NEO4J_AUTH=${NEO4J_AUTH}
      - NEO4J_AUTH=${NEO4J_USERNAME}/${NEO4J_PASSWORD}
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
  
  tunnel:
    image: cloudflare/cloudflared:latest 
    command: "tunnel --no-autoupdate run --token ${TUNNEL_TOKEN}"
    
volumes:
  neo4j-data: # Define the volume for Neo4j data persistence
