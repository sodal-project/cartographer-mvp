version: '3'
services:
  node-server:
    build:
      context: ./server    # Path to your Node.js server code
      dockerfile: Dockerfile
    volumes:
      - ./server:/app   # Mount a host directory to persist data
      - /app/node_modules   # Mount an empty volume for node_modules
    command: nodemon app.js localhost 3001  # Run the server with nodemon
    ports:
      - 3001:3001   # Expose the server port

  react-client:
    build:
      context: ./client    # Path to your React client code
      dockerfile: Dockerfile
    volumes:
      - ./client/public:/public   # Mount a host directory for React app
    ports:
      - 3000:3000   # Expose the client port

  neo4j-db:
    image: neo4j   # Use the official Neo4j Docker image
    hostname: cartographer-neo4j-db-1
    volumes:
      - neo4j-data:/data   # Persist Neo4j data
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    ports:
      - 7474:7474  # Map container port 7474 to host port 7474 for HTTP
      - 7687:7687  # Map container port 7687 to host port 7687 for Bolt

  ngrok:
    image: ngrok/ngrok:latest
    environment:
      - NGROK_AUTH_TOKEN=${NGROK_AUTH_TOKEN}
    restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    ports:
      - 4040:4040

volumes:
  neo4j-data:   # Define the volume for Neo4j data persistence
